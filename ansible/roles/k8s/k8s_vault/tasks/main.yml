# roles/k8s_vault
---
- name: Define AWS KMS secret
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: Secret
    name: kms-creds
    namespace: secrets-store
    resource_definition:
      data:
        AWS_ACCESS_KEY_ID: "{{ vault_aws_access_key_id | b64encode }}"
        AWS_SECRET_ACCESS_KEY: "{{ vault_aws_secret_access_key | b64encode }}"
        AWS_REGION: "{{ vault_aws_region | b64encode }}"
        AWS_KMS_KEY_ID: "{{ vault_aws_kms_key_id | b64encode }}"

- name: Check if vault is running
  kubernetes.core.k8s_info:
    kind: Pod
    name: vault-0
    namespace: secrets-store
    wait: true
    wait_condition:
      status: True
      type: Initialized
    wait_timeout: 180
  register: vault_running

- name: Verify vault connectivity
  kubernetes.core.k8s_exec:
    pod: vault-0
    namespace: secrets-store
    command: vault status
  register: vault_status
  ignore_errors: true

- name: Initialize vault
  kubernetes.core.k8s_exec:
    pod: vault-0
    namespace: secrets-store
    command: vault operator init
  register: vault_init
  when:
    - vault_running.resources[0] is defined
    - (vault_running | json_query("resources[0].status.conditions[?type=='Ready'].status"))[0] == "False"
    - vault_status.stdout_lines[3] is defined
    - vault_status.stdout_lines[3] is search("false")

- name: Save recovery keys
  local_action:
    module: copy
    dest: ~/mono-repo/ansible/.vault-keys
    content: |
      "{{ recovery_key_1 }}"
      "{{ recovery_key_2 }}"
      "{{ recovery_key_3 }}"
      "{{ recovery_key_4 }}"
      "{{ recovery_key_5 }}"
  when: vault_init.changed
  vars:
    recovery_key_1: "{{ (vault_init.stdout_lines[0] | split(':'))[1] | vault(secret, vault_id) }}"
    recovery_key_2: "{{ (vault_init.stdout_lines[1] | split(':'))[1] | vault(secret, vault_id) }}"
    recovery_key_3: "{{ (vault_init.stdout_lines[2] | split(':'))[1] | vault(secret, vault_id) }}"
    recovery_key_4: "{{ (vault_init.stdout_lines[3] | split(':'))[1] | vault(secret, vault_id) }}"
    recovery_key_5: "{{ (vault_init.stdout_lines[4] | split(':'))[1] | vault(secret, vault_id) }}"

- name: Save root token
  local_action:
    module: copy
    dest: ~/mono-repo/ansible/.vault-token
    content: "{{ root_token }}"
  when: vault_init.changed
  vars:
    root_token: "{{ (vault_init.stdout_lines[6] | split(':'))[1] | vault(secret, vault_id) }}"